{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,UAAWL,SAASC,cAAc,oBAGpCH,EAAKC,KAAKO,iBAAiB,UAkB3B,SAAkBC,GAChBA,EAAIC,iBACJV,EAAKO,UAAUI,UAAW,EAC1BC,YAAW,KACT,IAAIC,EAAeC,OAAOC,EAASX,OAC/BY,EAAa,KACjBA,EAAaC,aAAY,KACvB,GAAIC,IAAoBJ,OAAOC,EAAST,QAGtC,OAFAY,GAAmB,EACnBL,GAAgBC,OAAOC,EAASV,OArBjBc,EAsBMD,EAtBId,EAsBaS,EArBrC,IAAIO,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEF,E,MAAUf,IAEpBkB,EAAO,C,SAAEH,E,MAAUf,QAgBdqB,MAAK,EAACN,SAAEA,EAAQf,MAAEA,MACjBN,EAAA4B,OAAOC,QAAQ,uBAAqBR,QAAiBf,UAEtDwB,OAAM,EAACT,SAAEA,EAAQf,MAAEA,MAClBN,EAAA4B,OAAOG,QAAQ,sBAAoBV,QAAef,UA3B9D,IAAuBe,EAAUf,EA8B3B0B,cAAcd,GACdhB,EAAKO,UAAUI,UAAW,EAC1BO,EAAkB,IACjBH,EAASV,QACXU,EAASX,OACZK,EAAIsB,cAAcC,WAxCpBhC,EAAKC,KAAKO,iBAAiB,SA2C3B,SAAiBC,GACfM,EAASN,EAAIwB,OAAOC,MAAQzB,EAAIwB,OAAOE,SA1CzC,IAAIpB,EAAW,GACXG,EAAkB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btnSubmit: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\nrefs.form.addEventListener('input', onInput);\n\nlet formData = {};\nlet positionCounter = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  refs.btnSubmit.disabled = true;\n  setTimeout(() => {\n    let counterDelay = Number(formData.delay);\n    let intervalId = null;\n    intervalId = setInterval(() => {\n      if (positionCounter !== Number(formData.amount)) {\n        positionCounter += 1;\n        counterDelay += Number(formData.step);\n        return createPromise(positionCounter, counterDelay)\n          .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n      clearInterval(intervalId);\n      refs.btnSubmit.disabled = false;\n      positionCounter = 0;\n    }, formData.step);\n  }, formData.delay);\n  evt.currentTarget.reset();\n}\n\nfunction onInput(evt) {\n  formData[evt.target.name] = evt.target.value;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","btnSubmit","addEventListener","evt","preventDefault","disabled","setTimeout","counterDelay","Number","$47d4ff9957288465$var$formData","intervalId","setInterval","$47d4ff9957288465$var$positionCounter","position","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure","clearInterval","currentTarget","reset","target","name","value"],"version":3,"file":"03-promises.97ab9922.js.map"}